apiVersion: apps/v1
kind: StatefulSet
metadata:
    labels:
      app: darius
    name: statefulset-darius
    namespace: darius
spec:
    replicas: 1
    selector:
      matchLabels:
        app: darius
    # strategy:
    #   type: Recreate
    template:
      metadata:
        # creationTimestamp: null
        labels:
          app: darius
      spec:
        volumes:
        - name: volume-darius
          persistentVolumeClaim:
            claimName: pvc-darius
        # - name: nfs-bonn-epyc
        #   nfs:
        #     path: /data/
        #     server: bonn-epyc
        # - name: nfs-bonn-pe940
        #   nfs:
        #     path: /data/
        #     server: bonn-pe940
        # - name: apt-config
        #   configMap:
        #     name: apt-config
        # - name: volume-imsb
        #   persistentVolumeClaim:
        #     claimName: pvc-imsb-bonn-dgx-a100
        containers:
        - securityContext:
            # allowPrivilegeEscalation: false
            # capabilities:
            #   drop:
            #   - ALL
            # runAsNonRoot: true
            # runAsUser: 2856
          command:
          - sleep
          - infinity
          image: human0815/cuda-conda:12.8.1-v2
          imagePullPolicy: Always
          name: darius
          # envFrom:
          # - configMapRef:
          #     name: proxy-config
          resources:
            limits:
              memory: 200Gi
              nvidia.com/gpu: "1"
            requests:
              cpu: "8"
              memory: 200Gi
              nvidia.com/gpu: "1"
          volumeMounts:
          - mountPath: /epyc/projects/dschaub/
            name: volume-darius
          # - mountPath: /poweredge/
          #   name: nfs-bonn-pe940
          # - mountPath: /epyc/
          #   name: nfs-bonn-epyc
          # - mountPath: /etc/apt/apt.conf
          #   name: apt-config
          #   subPath: apt.conf
          # - mountPath: /
          #   name: volume-imsb
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        preemptionPolicy: PreemptLowerPriority
        priority: 0
        nodeSelector: {}
          # kubernetes.io/hostname: bonncuda
          # kubernetes.io/hostname: bonn-dgx-a100
          # kubernetes.io/hostname: deltabonn-2
          # kubernetes.io/hostname: deltabonn-h100

        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30         