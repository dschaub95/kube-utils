apiVersion: apps/v1
kind: Deployment
metadata:
    labels:
      app: deployment-darius
    name: deployment-darius
    namespace: darius
spec:
    replicas: 3
    selector:
      matchLabels:
        app: darius
    strategy:
      rollingUpdate:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: darius
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - darius
              topologyKey: kubernetes.io/hostname
        volumes:
        # - name: volume-darius
        #   persistentVolumeClaim:
        #     claimName: pvc-darius
        - name: volume-darius
          persistentVolumeClaim:
            claimName: pvc-darius
        containers:
        - command:
          - sleep
          - infinity
          # image: registry.ims.bio/cuda:12.0.1-conda
          image: registry.ims.bio/cuda:latest-v3
          imagePullPolicy: IfNotPresent
          name: darius
          envFrom:
          - configMapRef:
              name: proxy-config
          resources:
            # limits:
              # memory: "230Gi"
              # nvidia.com/gpu: "1"
          volumeMounts:
          - name: volume-darius
            mountPath: "/data/"
        dnsPolicy: ClusterFirst
        enableServiceLinks: true
        preemptionPolicy: PreemptLowerPriority
        priority: 0
        # nodeSelector:
        #   #kubernetes.io/hostname: deltabonn-5
        #   nvidia.com/gpu.product: NVIDIA-H100-PCIe-SHARED
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        